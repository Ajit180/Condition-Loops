Question 3: What are loops, and what do we need them? Explain different types of loops with their syntax and
examples.

Solution:

    Loops in programming are control structures used to repeatedly execute a block of code until a specified condition is met. They are essential for automating repetitive tasks, iterating over data structures, and processing large sets of data efficiently. In JavaScript, there are several types of loops, including `for`, `while`, and `do...while` loops.

### Why Do We Need Loops?
1. **Automation**: Loops automate repetitive tasks by executing the same code multiple times, reducing manual effort.
2. **Iteration**: Loops iterate over collections, such as arrays or objects, allowing access to each element individually for processing.
3. **Efficiency**: Loops help process large sets of data efficiently by performing operations on each element sequentially.
4. **Dynamic Behavior**: Loops provide dynamic behavior, enabling programs to adapt to changing conditions or data.

### Types of Loops in JavaScript

#### 1. `for` Loop
The `for` loop is used when the number of iterations is known or defined.
```javascript
for (initialization; condition; increment/decrement) {
  // Code to be executed in each iteration
}
```
Example:
```javascript
for (let i = 0; i < 5; i++) {
  console.log(i); // Outputs: 0, 1, 2, 3, 4
}
```

#### 2. `while` Loop
The `while` loop is used when the number of iterations is not known in advance and depends on a condition.
```javascript
while (condition) {
  // Code to be executed in each iteration
}
```
Example:
```javascript
let i = 0;
while (i < 5) {
  console.log(i); // Outputs: 0, 1, 2, 3, 4
  i++;
}
```

#### 3. `do...while` Loop
The `do...while` loop is similar to the `while` loop, but it guarantees that the code inside the loop will execute at least once before checking the condition.
```javascript
do {
  // Code to be executed in each iteration
} while (condition);
```
Example:
```javascript
let i = 0;
do {
  console.log(i); // Outputs: 0
  i++;
} while (i < 0); // Condition is false, but the loop body executes once
```

### Summary
Loops are indispensable in programming for automating repetitive tasks, iterating over data structures, and processing large sets of data efficiently. JavaScript provides several types of loops, including `for`, `while`, and `do...while`, each catering to different use cases. Understanding and mastering loops is fundamental for writing efficient and dynamic JavaScript code.